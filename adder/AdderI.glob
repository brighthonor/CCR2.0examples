DIGEST fe46549e111e56862c2431bb2abf71af
FSimComp.tutorial.adder.AdderI
R29:34 SimComp.Coqlib <> <> lib
R52:59 SimComp.ITreelib <> <> lib
R77:86 SimComp.definition.ImpPrelude <> <> lib
R104:106 SimComp.STS <> <> lib
R124:131 SimComp.Behavior <> <> lib
R149:154 SimComp.ModSem <> <> lib
R172:179 SimComp.Skeleton <> <> lib
R197:199 SimComp.PCM <> <> lib
R217:224 SimComp.HoareDef <> <> lib
R226:228 SimComp.STB <> <> lib
R230:232 SimComp.IPM <> <> lib
R251:255 SimComp.sProp <> <> lib
R257:262 SimComp.sWorld <> <> lib
R264:268 SimComp.World <> <> lib
R270:272 SimComp.SRF <> <> lib
R301:306 stdpp.coPset <> <> lib
R308:311 stdpp.gmap <> <> lib
R313:322 stdpp.namespaces <> <> lib
sec 359:361 <> IMP
R381:387 SimComp.sWorld CtxWD t class
binder 377:378 <> _W:15
def 521:525 <> mainF
R541:544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R533:536 Coq.Init.Datatypes <> list ind
R538:540 SimComp.definition.ImpPrelude <> val ind
R545:549 ITree.Core.ITreeDefinition <> itree corec
R557:559 SimComp.definition.ImpPrelude <> val ind
R551:555 SimComp.HoareDef <> hAGEs def
binder 572:575 <> args:16
R587:590 SimComp.ITreelib ITreeNotations2 ::itree_scope:x_'<-'_x_';;'_x not
R607:615 SimComp.ITreelib ITreeNotations2 ::itree_scope:x_'<-'_x_';;'_x not
R591:591 SimComp.ModSemE <> :::x_'?' not
R605:606 SimComp.ModSemE <> :::x_'?' not
R592:596 SimComp.definition.ImpPrelude <> pargs def
R601:604 SimComp.tutorial.adder.AdderI <> args:16 var
R598:599 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R616:616 SimComp.ITreelib ITreeNotations2 ::itree_scope:'`'_x_':'_x_'<-'_x_';;'_x not
R618:619 SimComp.ITreelib ITreeNotations2 ::itree_scope:'`'_x_':'_x_'<-'_x_';;'_x not
R623:626 SimComp.ITreelib ITreeNotations2 ::itree_scope:'`'_x_':'_x_'<-'_x_';;'_x not
R658:666 SimComp.ITreelib ITreeNotations2 ::itree_scope:'`'_x_':'_x_'<-'_x_';;'_x not
R627:632 SimComp.ModSem <> ccallU def
R641:641 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R648:649 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R656:656 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R642:645 SimComp.definition.ImpPrelude <> Vint constr
R650:653 SimComp.definition.ImpPrelude <> Vint constr
R620:622 SimComp.definition.ImpPrelude <> val ind
binder 617:617 <> a:17
R667:669 ITree.Core.ITreeDefinition <> Ret syndef
R671:671 SimComp.tutorial.adder.AdderI <> a:17 var
def 688:695 <> HMainSem
R698:706 SimComp.HoareDef HModSem t rec
R724:737 SimComp.HoareDef HModSem fnsems proj
R724:737 SimComp.HoareDef HModSem fnsems proj
R724:737 SimComp.HoareDef HModSem fnsems proj
R773:790 SimComp.HoareDef HModSem initial_st proj
R773:790 SimComp.HoareDef HModSem initial_st proj
R812:831 SimComp.HoareDef HModSem initial_cond proj
R812:831 SimComp.HoareDef HModSem initial_cond proj
R742:742 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R764:764 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R743:743 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R750:751 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R763:763 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R752:756 SimComp.ModSem <> cfunU def
R758:762 SimComp.tutorial.adder.AdderI <> mainF def
R795:797 ITree.Core.ITreeDefinition <> Ret syndef
R801:803 SimComp.Any <> :::x_'↑' not
R799:800 Coq.Init.Datatypes <> tt constr
R836:838 iris.bi.interface <> ::bi_scope:'emp' not
def 863:866 <> Main
R869:874 SimComp.HoareDef HMod t rec
R892:906 SimComp.HoareDef HMod get_modsem proj
R892:906 SimComp.HoareDef HMod get_modsem proj
R892:906 SimComp.HoareDef HMod get_modsem proj
R936:942 SimComp.HoareDef HMod sk proj
R936:942 SimComp.HoareDef HMod sk proj
R920:927 SimComp.tutorial.adder.AdderI <> HMainSem def
R947:947 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R965:965 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R948:948 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R955:956 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R964:964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R961:963 SimComp.Any <> :::x_'↑' not
R957:960 SimComp.definition.ImpPrelude <> Gfun constr
R981:983 SimComp.tutorial.adder.AdderI IMP <> sec
